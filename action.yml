name: "Text Extraction from Bills"
description: "Extract text from PDFs and XMLs in processed bill data"

inputs:
  state:
    description: "State abbreviation (e.g., id, il, tx, ny, or 'usa')"
    required: true
  github-token:
    description: "GitHub token for releases/artifacts"
    required: true
    default: "${{ github.token }}"
  force-update:
    description: "Force push even if upstream changed"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install formatter deps (pipenv)
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        PIPENV_VENV_IN_PROJECT: "1"
        PIPENV_IGNORE_VIRTUALENVS: "1"
      run: |
        set -euo pipefail
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --deploy --dev

    - name: Extract text from PDFs and XMLs
      shell: bash
      env:
        GIT_REPO_FOLDER: ${{ github.workspace }}
        STATE: ${{ inputs.state }}
      run: |
        set -euo pipefail
        cd "${{ github.action_path }}"
        echo "üìÑ Starting text extraction for $STATE..."
        echo "Processing data in: $GIT_REPO_FOLDER/data_output/data_processed"

        # Check if the data directory exists
        if [ ! -d "$GIT_REPO_FOLDER/data_output/data_processed" ]; then
          echo "‚ùå Data directory not found: $GIT_REPO_FOLDER/data_output/data_processed"
          echo "Make sure the data pipeline has been run first"
          exit 1
        fi

        # Run text extraction using the main.py interface
        pipenv run python openstates_scraped_data_formatter/main.py \
          --state "$STATE" \
          --data-folder "$GIT_REPO_FOLDER/data_output/data_processed"
        echo "‚úÖ Text extraction complete"

    - name: Commit & push extracted text
      shell: bash
      run: |
        set -euo pipefail
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

        # Only commit the extracted text files
        git add data_output/ || true
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Automated text extraction for ${{ inputs.state }}"
          if [ "${{ inputs.force-update }}" = "true" ]; then
            git push --force-with-lease origin main
          else
            git push origin main
          fi
        fi
